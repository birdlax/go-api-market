services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    # ✅ เพิ่มเติม: ส่วนตรวจสอบความพร้อมของ Postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        # ✅ เปลี่ยน: รอจนกว่า postgres จะ healthy
        condition: service_healthy
    restart: unless-stopped

  goapi:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_NAME: mydatabase
      EMAIL_USERNAME: sungjinta@gmail.com
      EMAIL_PASSWORD: aqio nbmf kdwv wkeu
    depends_on:
      postgres:
        # ✅ เปลี่ยน: รอจนกว่า postgres จะ healthy
        condition: service_healthy
    volumes:
      - ./go-uploads:/root/uploads
    restart: unless-stopped

volumes:
  postgres_data:
  # หมายเหตุ: เราเปลี่ยนไปใช้ bind mount สำหรับ uploads แล้ว
  # ถ้าไม่ได้ใช้ named volume ก็ลบ uploads_data: ออกได้