# ------------------- Stage 1: Build -------------------
FROM golang:1.23-alpine AS builder

ENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .

# üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô (‡πÅ‡∏ï‡πà‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏Ñ‡∏ß‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á runtime ‡∏î‡πâ‡∏ß‡∏¢)
RUN mkdir -p ./uploads
RUN mkdir -p ./images

# ‚úÖ Copy placeholder images (‡πÅ‡∏ï‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏±‡∏ô copy ‡∏à‡∏≤‡∏Å ./images ‡πÑ‡∏õ ./images ‡πÄ‡∏≠‡∏á)
# ‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢ **‡∏•‡∏ö‡∏≠‡∏≠‡∏Å** ‡πÑ‡∏î‡πâ: 
# RUN cp ./images/placeholder-product.png ./images/

RUN go build -o main

# ------------------- Stage 2: Runtime -------------------
FROM alpine:latest

WORKDIR /root/

# ‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å binary
COPY --from=builder /app/main .

# ‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå uploads ‡πÅ‡∏•‡∏∞ placeholder ‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
COPY --from=builder /app/images ./images
COPY --from=builder /app/uploads   ./uploads  

EXPOSE 3000

CMD ["./main"]
